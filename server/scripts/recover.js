const { secp256k1 } = require("ethereum-cryptography/secp256k1");
const { toHex, utf8ToBytes } = require("ethereum-cryptography/utils");
const { keccak256 } = require("ethereum-cryptography/keccak");

const SIGNATURE = "{\
  r: 23720051498763503783917726271523652549207294298985279159350933837174710203328n,\
  s: 4435980828796164432731250662896255671753207847874516322178971334725112889219n,\
  recovery: 1\
}"

const PUBLIC_KEY = secp256k1.recoverPublicKey(keccak256(utf8ToBytes("message")), SIGNATURE, 1);

console.log('Public key recovered: ', toHex(PUBLIC_KEY));

// "02d09dd302783f8ad970eed2958fc5100674c580535838f4c5039e64852154410d": 100,
// 6fed8df8fc035dc98b271e55b381a57fd24b7cb4953edb2fcbce0a0e9dfde8c7
// Signature {
//   r: 23720051498763503783917726271523652549207294298985279159350933837174710203328n,
//   s: 4435980828796164432731250662896255671753207847874516322178971334725112889219n,
//   recovery: 1
// }
// "0371a62f45acb1d80739fc4e2d4b8d21a6c0008f2a2f7785168da091070949e1e9": 50
// 44637e9ed6cbf9299a5c0b24fa9bb286c5aadb8d918844702e8f512a4ea20d72
// Signature {
//   r: 37108325501407529916172586963101025735763752280376970380152320626751075566051n,
//   s: 5464974280504064928918520448510040409937034776577158480937385176048019533503n,
//   recovery: 1
// }